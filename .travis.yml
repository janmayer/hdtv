# Don't use language: python; this gives us an unnecessary installation + virtualenv
language: cpp

env:
  - PYTHON_VERSION=3.6 ROOT_VERSION=6.20.4
  - PYTHON_VERSION=3.6 ROOT_VERSION=6.20.2
  - PYTHON_VERSION=3.6 ROOT_VERSION=6.20.0
  - PYTHON_VERSION=3.6 ROOT_VERSION=6.18.04
  - PYTHON_VERSION=3.6 ROOT_VERSION=6.18.00

  - PYTHON_VERSION=3.7 ROOT_VERSION=6.20.4
  - PYTHON_VERSION=3.7 ROOT_VERSION=6.20.2
  - PYTHON_VERSION=3.7 ROOT_VERSION=6.20.0
  - PYTHON_VERSION=3.7 ROOT_VERSION=6.18.04
  - PYTHON_VERSION=3.7 ROOT_VERSION=6.18.00

  - PYTHON_VERSION=3.8 ROOT_VERSION=6.20.4
  - PYTHON_VERSION=3.8 ROOT_VERSION=6.20.2
  - PYTHON_VERSION=3.8 ROOT_VERSION=6.20.0
  - PYTHON_VERSION=3.8 ROOT_VERSION=6.18.04
  #- PYTHON_VERSION=3.8 ROOT_VERSION=6.18.00

  #- ROOT_VERSION=6.16.00
  #- ROOT_VERSION=6.14.06

os:
  - linux
  # - osx

services:
  - xvfb

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"

  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda

  - conda create -q -n hdtv-environment python=$TRAVIS_PYTHON_VERSION root=$ROOT_VERSION numpy scipy prompt_toolkit matplotlib uncertainties
    docutils conda-build anaconda-client pytest pytest-cov codecov
  - conda activate hdtv-environment

  # - conda config --set auto_update_conda no
  # - conda build conda.recipe --no-test
  # - conda install --use-local hdtv
  - conda info -a

script:
  - pytest -v --color=yes --cov=hdtv tests

after_success:
  - codecov

deploy:
  provider: pypi
  distributions: "sdist bdist_wheel"
  skip_existing: true
  skip_cleanup: true
  on:
    tags: true
  user: __token__
  password:
    secure: gh/FXDmaNgnzHyTABwvca4PCB2sWOLG3xuzxHy8Z73+bDuRZ+NnHjuGVk0jiYteHpvEGdDV3rdSdwmHs5jdIe7qcDVCGHD3n15ADnrGZh5fbkCN24s7jBjYSwDf/Z5Yh65X4MYS8ATnBwtCbF6rhvSgyvO78sdl7PyOpJI9X+gCkowFzdS+2MDweWxwi077jcNO93k9NpsqXthE6GzF/4aUk6uNKoso+RwBPXW17tHYPNc+8qkvMdeCVC+dnvw2qPPSFFlQcZlgIaBer2hD97hHZXYdtp4OF/QMpsjy4OY65nKqgIyj/pP19s3qVPALyP0y5OkTAL14vAjHpRb7RhliivwSmA4elqeL6U+hW90ylQ+e2j/Ba/bLf/rcYoy2XZq7/RzVasdIHzsSPOhIfMUTYX6XRUUNfuUDj4OzccWS3DkH//Liry+DSNZmXgV/E2QTLqknnwGQWRrWsN0ORR1Xp/vGB99sefHqlrkM1QE+LYxE5cfnkaWzKVVTK/HUW/PIlsGJLG2qF/7kKqXvgOVVVlF8a/5mBoFtelYhmmE62rd7hegDV6LvedGzfs+XvWlq2F5hZKQMq9lX3mVSFqSYPyAaiO0wtRjCEyttaJp0LP6hEFS2Hipwr8dMppa4gHfWhft04C3INGD3hqmO4oDDE2HBNFOnJ3TQfg62uF7Y=
